{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","active","to","name","Message","massage","message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requaredFiels","Dialogs","state","dialogsPage","dialogElements","dialogsData","map","messageElements","messageData","dialogs","dialogsItems","massages","values","sendMessage","newMessageChange","compose","connect","dialogsReducer","newMessageBody","dispatch","newMassageBody","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,2FCenMC,EATI,SAACC,GACjB,IAAKC,EAAO,YAAcD,EAAME,GAChC,OAAO,qBAAKC,UAAWC,IAAMC,OAAQ,IAAID,IAAME,OAAxC,SACH,eAAC,IAAD,CAASC,GAAIN,EAAb,UAAoBD,EAAMQ,KAA1B,KAAkCR,EAAME,SCEhCO,EANA,SAACT,GACb,OAAO,sBAAKG,UAAWC,IAAMM,QAAtB,cAAiCV,EAAMW,Y,iCCyC5CC,EAAYC,YAAiB,IAoB7BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAlBL,SAACf,GAEpB,OACG,uBAAMiB,SAAWjB,EAAMkB,aAAvB,UAEG,8BACI,cAACC,EAAA,EAAD,CAAQC,UAAYC,IACpBb,KAAO,mBACNc,YAAa,oBACbC,SAAY,CAACC,IAAeZ,OAEjC,8BAAK,oDASCa,EAxDA,SAACzB,GAIb,IAAI0B,EAAO1B,EAAM2B,YAEbC,EAAiBF,EAAMG,YAAYC,KAAI,SAACzB,GAAD,OAAc,cAAC,EAAD,CAAaG,KAAOH,EAAOG,KAAON,GAAMG,EAAOH,QACpG6B,EAAkBL,EAAMM,YAAYF,KAAI,SAACpB,GAAD,OAAgB,cAAC,EAAD,CAASC,QAASD,EAAQC,QAAUT,GAAMQ,EAAQR,QAQ9G,OACI,8BACI,sBAAKC,UAAWC,IAAM6B,QAAtB,UACI,qBAAK9B,UAAWC,IAAM8B,aAAtB,SACMN,IAEN,sBAAKzB,UAAWC,IAAM+B,SAAtB,UACI,8BAAOJ,IACP,cAAC,EAAD,CAASrB,QAAS,KAClB,cAACI,EAAD,CAAqBG,SAfZ,SAACmB,GACtBpC,EAAMqC,YAAYD,EAAOE,8B,kCCDlBC,4BACXC,aAhBkB,SAACd,GAEnB,MAAO,CACHC,YAAaD,EAAMe,eACnBC,eAAgBhB,EAAMe,eAAeC,mBAIpB,SAACC,GACtB,MAAO,CACHN,YAAa,SAACO,GAAkBD,EAASE,YAAmBD,SAOhEE,IAFWP,CAGbd","file":"static/js/3.475738ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__yMNa9\",\"dialogsItems\":\"Dialogs_dialogsItems__Za6s_\",\"active\":\"Dialogs_active__NhRde\",\"dialog\":\"Dialogs_dialog__31mZ6\",\"messages\":\"Dialogs_messages__1SXFy\",\"massage\":\"Dialogs_massage__DYQvQ\"};","import React from 'react';\r\nimport  style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nconst  DialogItem = (props)=>{\r\n    let  path = \"/dialogs/\" + props.id\r\n    return <div className={style.dialog+ ' '+style.active}>\r\n        <NavLink to={path}>{props.name}  {props.id}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport  default DialogItem;","import React from 'react';\r\nimport  style from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={style.massage}> {props.message}</div>\r\n}\r\n\r\n\r\n\r\nexport  default Message;","import React from 'react';\r\nimport  style from './Dialogs.module.css'\r\nimport  DialogItem from './DialogItem/DialogItem'\r\nimport  Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsConrols/FormsControls';\r\nimport {requaredFiels, maxLengthCreator} from '../Utils/Validators'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props)=>{\r\n\r\n\r\n\r\n    let state= props.dialogsPage\r\n\r\n    let dialogElements = state.dialogsData.map((dialog)=>   (<DialogItem  name ={dialog.name}  id = {dialog.id}/>))\r\n    let messageElements = state.messageData.map((massage)=>   ( <Message message={massage.message}  id = {massage.id} />))\r\n\r\n    let addNewMessageChange =(values) => {\r\n        props.sendMessage(values.newMessageChange)\r\n     }\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <div className={style.dialogs}>\r\n                <div className={style.dialogsItems}>\r\n                    { dialogElements }\r\n                </div>\r\n                <div className={style.massages}>\r\n                    <div>{ messageElements }</div>\r\n                    <Message massage={''} />\r\n                    <AddMessageFormRedux onSubmit ={addNewMessageChange}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return ( \r\n       <form onSubmit= {props.handleSubmit}>\r\n         \r\n          <div>\r\n              <Field  component= {Textarea}  \r\n              name = \"newMessageChange\"\r\n               placeholder =\"Enter your massge\"\r\n               validate = {[requaredFiels, maxLength ]}\r\n               /></div>\r\n          <div><button> Send </button></div>\r\n   \r\n     \r\n      </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport  default Dialogs;","import React from 'react';\r\nimport dialogsReducer, {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport Redirect from '../Login/login'\r\nimport {withAuthRedirect} from '../../hoc/AuthrRdirect'\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state)=>{\r\n\r\n    return {\r\n        dialogsPage: state.dialogsReducer,\r\n        newMessageBody: state.dialogsReducer.newMessageBody,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        sendMessage: (newMassageBody)=>{dispatch(sendMessageCreator(newMassageBody));}\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect \r\n)(Dialogs)\r\n\r\n\r\n"],"sourceRoot":""}